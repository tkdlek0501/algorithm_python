# Q. 전화번호 목록
# 문제 설명
# 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
# 전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.
#
# 구조대 : 119
# 박준영 : 97 674 223
# 지영석 : 11 9552 4421
# 전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.
#
# 제한 사항
# phone_book의 길이는 1 이상 1,000,000 이하입니다.
# 각 전화번호의 길이는 1 이상 20 이하입니다.
# 같은 전화번호가 중복해서 들어있지 않습니다.
# 입출력 예제
# phone_book	return
# ["119", "97674223", "1195524421"]	false
# ["123","456","789"]	true
# ["12","123","1235","567","88"]	false
# 입출력 예 설명
# 입출력 예 #1
# 앞에서 설명한 예와 같습니다.
#
# 입출력 예 #2
# 한 번호가 다른 번호의 접두사인 경우가 없으므로, 답은 true입니다.
#
# 입출력 예 #3
# 첫 번째 전화번호, “12”가 두 번째 전화번호 “123”의 접두사입니다. 따라서 답은 false입니다.


# <문제분석>
# 한 번호가 다른 번호의 접두어인 경우가 있는지 확인
# ex. 구조대는 지영석의 전화번호의 접두어
# 구조대 : 119
# 지영석 : 11 9552 4421

# 입력) 전화번호 배열 phone_book
# 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false
# or true 반환

def solution(phone_book):
    phone_book.sort()  # 비슷한 번호끼리 붙게 된다

    for i in range(len(phone_book) - 1):
        if phone_book[i + 1].startswith(phone_book[i]):
            return False
    return True

# <피드백>
# 접두어가 되는지를 찾아야 한다는 것은 비슷한 지를 물어보는 것과 비슷하다
# 따라서 정렬을 통해 비슷한 문자열끼리 붙을 수 있도록 해주고
# 앞 뒤 비교를 str.startswith()를 통해 해주면 된다
# 여기서 해시를 사용하는 것은 비효율적이다
# for number in phone_book:
#     for i in range(1, len(number)):
#         if number[:i] in phone_book_set:
#             return False