# Q. n^2 배열 자르기
#
# 문제 설명
# 정수 n, left, right가 주어집니다. 다음 과정을 거쳐서 1차원 배열을 만들고자 합니다.
#
# n행 n열 크기의 비어있는 2차원 배열을 만듭니다.
# i = 1, 2, 3, ..., n에 대해서, 다음 과정을 반복합니다.
# 1행 1열부터 i행 i열까지의 영역 내의 모든 빈 칸을 숫자 i로 채웁니다.
# 1행, 2행, ..., n행을 잘라내어 모두 이어붙인 새로운 1차원 배열을 만듭니다.
# 새로운 1차원 배열을 arr이라 할 때, arr[left], arr[left+1], ..., arr[right]만 남기고 나머지는 지웁니다.
# 정수 n, left, right가 매개변수로 주어집니다. 주어진 과정대로 만들어진 1차원 배열을 return 하도록 solution 함수를 완성해주세요.
#
# 제한사항
# 1 ≤ n ≤ 107
# 0 ≤ left ≤ right < n2
# right - left < 105
# 입출력 예
# n	left	right	result
# 3	2	5	[3,2,2,3]
# 4	7	14	[4,3,3,3,4,4,4,4]

# <풀이>
# n의 범위가 너무 커서 직접 for 문 돌면서 만들어서 할 수 없다.
# 전체 배열은 n x n 크기의 2차원 배열을 1차원으로 펼친 것
# 2차원 <-> 1차원 인덱스는 다음 공식을 따름
# 2차원 row = 1차원 i번째 // 길이 n (행은 몫)
# 2차원 col = 1차원 i번째 % 길이 n (열은 나머지)

def solution(n, left, right):
    answer = []

    for i in range(left, right + 1):  # left 부터 right 까지
        row = i // n
        col = i % n
        answer.append(max(row, col) + 1) # 더 큰 값

    return answer

# <피드백>
# 2차원 <-> 1차원 일때
# 2차원의 행과 열 인덱스는 1차원에서 인덱스 // 길이, 인덱스 % 길이 이다
# 즉 행열은 몫과 나머지 이다