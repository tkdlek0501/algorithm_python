# Q. 예상대진표

# <문제분석>
# N명 토너먼트
# 1부터 N번을 차례대로 배정(0부터 아님)
# 1 <-> 2 , 3 <-> 4, N-1 <-> N 게임 진행
# 이기면 다음 라운드 진출

# 다음 라운드에 올라가면 또 다시
# 1번 부터 N/2 번 차례대로 배정

# 한 명 남을 때까지 진행

# 처음에 A번 가진 참가자는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌다
# 게임 참가자 수 N
# 참가자 번호 A
# 경쟁자 번호 B

# A번 가진 참가자는 B번 참가자와 몇번째 라운드에서 만나는지 return
# *단 A, B 참가자는 서로 만날 때 까지는 항상 이겨서 올라간다

# ex.
# 참가자 수 N = 8명 이라면
# A가 4이고 B가 7이면
# 3번째 라운드 때 만난다
# 1라 : 3 <-> (4) , (7) <-> 8
# 2라 : 1 <-> (2), 3 <-> (4)
# 3라 : (1) <-> (2)

# 이겼을 때 다음 라운드 번호는 짝수이면 /2 홀수이면 //2 + 1
# 1 <-> 2 는 되고 2 <-> 3 은 안된다 3 <-> 4는 되고
# 1, 2 / 3, 4 / 5, 6 ... 어떻게 구하지?
# 차이가 1이면서

# def solution(n, a, b):
#     answer = 1
#
#     while True:
#         if a - b == 1 or b - a == 1:
#             return answer
#         if a % 2 == 0:
#             a = int(a / 2)
#         else:
#             a = a // 2 + 1
#         if b % 2 == 0:
#             b = int(b / 2)
#         else:
#             b = b // 2 + 1
#         answer += 1
#
#     return answer

def solution(n, a, b):
    answer = 1

    while True:
        # 같은 경기에서 만나는지 확인
        # 1↔2, 3↔4, 5↔6... 이런 식으로 짝을 이룸
        if (a - 1) // 2 == (b - 1) // 2:
            return answer

        # 다음 라운드 번호 계산
        # 홀수면 올림, 짝수면 나누기 2
        a = (a + 1) // 2  # 더 간단한 방식
        b = (b + 1) // 2
        answer += 1

    return answer

# <피드백>
# 두 차이가 1이 나면서 어떻게 해야 서로 짝이 되는지 판별할 수 있는지를 못찾았다
# 짝을 판단하기 위해서는 결국 홀수와 그 다음 짝수가 한 팀이 되므로
# 1, 2 라면 -1을 해준뒤 (0, 1) - 인덱스 보정
# 나누기 2의 몫 (1, 1)이 같으면 짝이 된다

# 홀짝이라던지 어떤 규칙을 찾아내기 위해서
# 인덱스 보정도 해보면서 패턴을 만들어 낼 수 있다